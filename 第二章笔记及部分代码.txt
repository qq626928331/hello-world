数据存储的发展：
	第一个阶段是：手工阶段 打孔器
	第二个阶段是：文件的概念
	第三个阶段是：提出了数据库的概念
MySQL：数据库
	1.实际上存储数据使用表的方式来实现，将数据库存储在一个表中
	2.MySQL是一种关系型数据库：表与表之间会相互关联的存在，一个表可能会映射出多个子表。
	3.MySQL数据库属于小型（轻量型）的数据库
	  Oracle企业版数据库，大型数据库 成本高（30万美元）
	  MySQL其体积小、速度快、总体拥有成本低 速率大约是Oracle三倍左右
	  Oracle和MySQL都是属于电脑的硬盘读取数据
	4.内存数据库
	  redis 一种内存数据库，通过cpu来处理数据
	5.五种约束类型：
	-- 主键：每张表只能有一个主键
	-- unique 唯一约束 列中数据不允许重复
	-- NOT NULL 非空约束 列中不允许有空值存在
	-- 检查约束 check MySQL 使用enum 类型 来去判断存入的值是否有效
	-- 外键约束 FOREIGN KEY person(hobby_id) REFERENCES hobbies(hobby_id)
	-- 本表中关联的外键列+REFERENCES+需要关联的主键或者唯一键 本表的关键列与子表的关键列可以写在REFERENCES关键字的任意两边
	-- 注意：hobbies表中的某一列 如果想要设置为外键 某一列如果想要设置为外键 	此列一定是 唯一或者	是主键
	-- comment，设置字段的注释信息。
	-- default，设置字段的默认值。
	两种方式添加外键约束：
	   1.ALTER TABLE 表名 ADD CONSTRAINT 外键名 FOREIGN KEY 表名(字段名) REFERENCES 被参照表名（字段名）


	6.数据类型：
	float单精度浮点类型
	double双精度浮点类型
	可以存储小数
	datetime 日期时间型（含时分秒）
	timestamp 时间格式（针对于操作系统而言的时间）
	timestamp：只能显示从1970-1-1开始的时间	  1970-1-1 00：00：00-9999：12：31 23：59：59
	区分时区 中国时区与外国时区不同 数值也是不同的
	timestamp：是有默认值的
	datetime 没有范围的限制
	char定长字符 char(10)
	varchar(10)超出varchar的范围 自动扩容的性质

	7.复制表：
	create table 新表名 like 源表 （复制表的结构，但不复制标的数据）
	create table 新表名 select * from 源表（既复制表的结构 又复制表的数据 ）
	8.删除表：
	drop table 表名
	9.修改表
	    9.1 添加一列
		ALTER TABLE 表名 ADD 列名 数据类型和长度 新列属性
	    9.2 修改列属性
		ALTER TABLE 表名 MODIFY 列名 数据类型和长度 新列属性
	    9.3 删除一列
		ALTER TABLE 表名 DROP COLUMN 列名 
	10.修改约束类型
	    10.1 添加唯一约束
		ALTER TABLE subject ADD CONSTRAINT subject_name_unique UNIQUE (subject_name)
	    10.2 添加外键约束
		ALTER TABLE subject ADD CONSTRAINT subject_id_fk FOREIGN KEY subject(subject_id) REFERENCES user(subject_id)
	    注意：修改非空约束：
		ALTER TABLE ttt MODIFY SUBJECT_ID VARCHAR(20) NOT NULL

	11.修改默认值
		ALTER TABLE USER ALTER age SET DEFAULT 20
	12.修改表名
	   方法一：rename table 旧表名 to 新表名
	   方法二：alter table 旧表名 rename 新表名
		










2018年9月28日代码
-- 查询语句语法：
-- 关键字select
-- * 查询表中所有的数据
-- FROM 查询具体哪一个表
SELECT * FROM person
SELECT * FROM hobbies
-- 查询表中 某一列
SELECT name FROM person
-- 查询表中 多个列
SELECT NAME,sex FROM person
-- 按照条件 查询
-- 查询user表中 名族为汉族的 数据
SELECT * FROM user where nation='汉'
-- 查询 `user` 表中年龄大于25岁的员工
SELECT * FROM user where age>25
-- 查询 `user` 表中年龄大于25岁 并且民族为汉族的员工
SELECT * FROM user where age>25 AND nation='汉'



SELECT person.NAME,hobbies.hobby,SUBJECT.subject_name
FROM person,hobbies,SUBJECT
WHERE person.hobby_id=hobbies.hobby_id AND person.subject_id=SUBJECT.subject_id


2018年9月29日代码
CREATE TABLE DEPT(
DEPTNO INT(2) PRIMARY KEY NOT NULL AUTO_INCREMENT COMMENT '部门编号，设置为主键和自动递增列',
DNAME VARCHAR(20) NOT NULL COMMENT '部门名称',
LOC VARCHAR(30) NOT NULL COMMENT '部门地点'
)
CREATE 	TABLE EMP(
EMPNO INT(4) PRIMARY KEY NOT NULL AUTO_INCREMENT COMMENT '员工编号，设置为主键和自动递增列',
ENAME VARCHAR(10) NOT NULL COMMENT '员工姓名',
JOB VARCHAR(10) NOT NULL COMMENT '职务',
MGR VARCHAR(10) NOT NULL COMMENT '经理编号',
HIREDATE DATE NOT NULL COMMENT '入职日期',
SAL DOUBLE(7,2) NOT NULL COMMENT '工资',
COMM DOUBLE(7,2) NOT NULL COMMENT '奖金',
DEPTNO INT(2) NOT NULL COMMENT '部门编号'
)
ALTER TABLE dept ADD area VARCHAR(20) NOT NULL COMMENT '比赛场地'
alter table dept DROP COLUMN area
ALTER TABLE dept ADD CONSTRAINT DNAME_unique UNIQUE (DNAME) 
ALTER TABLE subject ADD CONSTRAINT subject_id_fk FOREIGN KEY subject(subject_id) REFERENCES user(subject_id)
	
